//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class VehiculosEntities : DbContext
    {
        public VehiculosEntities()
            : base("name=VehiculosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Vehiculo> Vehiculoes { get; set; }
    
        public virtual ObjectResult<VehiculoGetAll_Result> VehiculoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VehiculoGetAll_Result>("VehiculoGetAll");
        }
    
        public virtual int VehiculoAdd(string fechaReclamo, Nullable<int> horaPercanse, string tipoPercanse, Nullable<int> numeroPoliza, string nombreConductor, Nullable<int> contactoConductor, string detallesVehiculo, string dañosPrejuicios, Nullable<decimal> estimacionReparacion)
        {
            var fechaReclamoParameter = fechaReclamo != null ?
                new ObjectParameter("FechaReclamo", fechaReclamo) :
                new ObjectParameter("FechaReclamo", typeof(string));
    
            var horaPercanseParameter = horaPercanse.HasValue ?
                new ObjectParameter("HoraPercanse", horaPercanse) :
                new ObjectParameter("HoraPercanse", typeof(int));
    
            var tipoPercanseParameter = tipoPercanse != null ?
                new ObjectParameter("TipoPercanse", tipoPercanse) :
                new ObjectParameter("TipoPercanse", typeof(string));
    
            var numeroPolizaParameter = numeroPoliza.HasValue ?
                new ObjectParameter("NumeroPoliza", numeroPoliza) :
                new ObjectParameter("NumeroPoliza", typeof(int));
    
            var nombreConductorParameter = nombreConductor != null ?
                new ObjectParameter("NombreConductor", nombreConductor) :
                new ObjectParameter("NombreConductor", typeof(string));
    
            var contactoConductorParameter = contactoConductor.HasValue ?
                new ObjectParameter("ContactoConductor", contactoConductor) :
                new ObjectParameter("ContactoConductor", typeof(int));
    
            var detallesVehiculoParameter = detallesVehiculo != null ?
                new ObjectParameter("DetallesVehiculo", detallesVehiculo) :
                new ObjectParameter("DetallesVehiculo", typeof(string));
    
            var dañosPrejuiciosParameter = dañosPrejuicios != null ?
                new ObjectParameter("DañosPrejuicios", dañosPrejuicios) :
                new ObjectParameter("DañosPrejuicios", typeof(string));
    
            var estimacionReparacionParameter = estimacionReparacion.HasValue ?
                new ObjectParameter("EstimacionReparacion", estimacionReparacion) :
                new ObjectParameter("EstimacionReparacion", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VehiculoAdd", fechaReclamoParameter, horaPercanseParameter, tipoPercanseParameter, numeroPolizaParameter, nombreConductorParameter, contactoConductorParameter, detallesVehiculoParameter, dañosPrejuiciosParameter, estimacionReparacionParameter);
        }
    }
}
